#############################################################################
# Makefile for building: "Projet Final SDD L2"
# Generated by qmake (2.01a) (Qt 4.7.0) on: ven. 7. janv. 19:07:42 2011
# Project:  Projet Final SDD L2.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -g -Wall $(DEFINES)
CXXFLAGS      = -g -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\Qt\2010.05\qt\include\QtCore" -I"c:\Qt\2010.05\qt\include\QtGui" -I"c:\Qt\2010.05\qt\include" -I"." -I"c:\Qt\2010.05\qt\include\ActiveQt" -I"debug" -I"c:\Qt\2010.05\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L"c:\Qt\2010.05\qt\lib" -lmingw32 -lqtmaind -lQtGuid4 -lQtCored4 
QMAKE         = c:\Qt\2010.05\qt\bin\qmake.exe
IDC           = c:\Qt\2010.05\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = debug

####### Files

SOURCES       = CodeCesar.cpp \
		Enigma.cpp \
		FonctionsTraitement.cpp \
		main.cpp \
		MyCrypto.cpp \
		Scytale.cpp \
		Vigenere.cpp debug\moc_MyCrypto.cpp
OBJECTS       = debug/CodeCesar.o \
		debug/Enigma.o \
		debug/FonctionsTraitement.o \
		debug/main.o \
		debug/MyCrypto.o \
		debug/Scytale.o \
		debug/Vigenere.o \
		debug/moc_MyCrypto.o
DIST          = 
QMAKE_TARGET  = Projet Final SDD L2
DESTDIR        = debug\ #avoid trailing-slash linebreak
TARGET         = "Projet Final SDD L2.exe"
DESTDIR_TARGET = "debug\Projet Final SDD L2.exe"

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Debug  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -o Makefile.Debug "Projet Final SDD L2.pro"

dist:
	$(ZIP) Projet Final SDD L2.zip $(SOURCES) $(DIST) Projet Final SDD L2.pro c:\Qt\2010.05\qt\mkspecs\qconfig.pri c:\Qt\2010.05\qt\mkspecs\modules\qt_webkit_version.pri c:\Qt\2010.05\qt\mkspecs\features\qt_functions.prf c:\Qt\2010.05\qt\mkspecs\features\qt_config.prf c:\Qt\2010.05\qt\mkspecs\features\exclusive_builds.prf c:\Qt\2010.05\qt\mkspecs\features\default_pre.prf c:\Qt\2010.05\qt\mkspecs\features\win32\default_pre.prf c:\Qt\2010.05\qt\mkspecs\features\debug.prf c:\Qt\2010.05\qt\mkspecs\features\debug_and_release.prf c:\Qt\2010.05\qt\mkspecs\features\default_post.prf c:\Qt\2010.05\qt\mkspecs\features\win32\default_post.prf c:\Qt\2010.05\qt\mkspecs\features\build_pass.prf c:\Qt\2010.05\qt\mkspecs\features\win32\rtti.prf c:\Qt\2010.05\qt\mkspecs\features\win32\exceptions.prf c:\Qt\2010.05\qt\mkspecs\features\win32\stl.prf c:\Qt\2010.05\qt\mkspecs\features\shared.prf c:\Qt\2010.05\qt\mkspecs\features\warn_on.prf c:\Qt\2010.05\qt\mkspecs\features\qt.prf c:\Qt\2010.05\qt\mkspecs\features\win32\thread.prf c:\Qt\2010.05\qt\mkspecs\features\moc.prf c:\Qt\2010.05\qt\mkspecs\features\win32\windows.prf c:\Qt\2010.05\qt\mkspecs\features\resources.prf c:\Qt\2010.05\qt\mkspecs\features\uic.prf c:\Qt\2010.05\qt\mkspecs\features\yacc.prf c:\Qt\2010.05\qt\mkspecs\features\lex.prf c:\Qt\2010.05\qt\mkspecs\features\include_source_dir.prf c:\Qt\2010.05\qt\lib\qtmaind.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) debug\CodeCesar.o debug\Enigma.o debug\FonctionsTraitement.o debug\main.o debug\MyCrypto.o debug\Scytale.o debug\Vigenere.o debug\moc_MyCrypto.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Debug

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_MyCrypto.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug\moc_MyCrypto.cpp
debug/moc_MyCrypto.cpp: CodeCesar.h \
		FonctionsTraitement.h \
		Scytale.h \
		Vigenere.h \
		Enigma.h \
		MyCrypto.h
	C:\Qt\2010.05\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 MyCrypto.h -o debug\moc_MyCrypto.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 



####### Compile

debug/CodeCesar.o: CodeCesar.cpp CodeCesar.h \
		FonctionsTraitement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\CodeCesar.o CodeCesar.cpp

debug/Enigma.o: Enigma.cpp Enigma.h \
		FonctionsTraitement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\Enigma.o Enigma.cpp

debug/FonctionsTraitement.o: FonctionsTraitement.cpp FonctionsTraitement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\FonctionsTraitement.o FonctionsTraitement.cpp

debug/main.o: main.cpp MyCrypto.h \
		CodeCesar.h \
		FonctionsTraitement.h \
		Scytale.h \
		Vigenere.h \
		Enigma.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\main.o main.cpp

debug/MyCrypto.o: MyCrypto.cpp MyCrypto.h \
		CodeCesar.h \
		FonctionsTraitement.h \
		Scytale.h \
		Vigenere.h \
		Enigma.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\MyCrypto.o MyCrypto.cpp

debug/Scytale.o: Scytale.cpp Scytale.h \
		FonctionsTraitement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\Scytale.o Scytale.cpp

debug/Vigenere.o: Vigenere.cpp Vigenere.h \
		FonctionsTraitement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\Vigenere.o Vigenere.cpp

debug/moc_MyCrypto.o: debug/moc_MyCrypto.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_MyCrypto.o debug\moc_MyCrypto.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

